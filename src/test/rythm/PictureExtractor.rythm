@// Rythm template for dragtop http://www.bitplan.com/index.php/Dragtop
@// usage of MediaWiki module example
@import com.bitplan.mediawiki.japi.api.Ii
@import com.bitplan.mediawiki.japi.api.Im
@import com.bitplan.mediawiki.japi.SSLWiki
@import com.bitplan.simplegraph.mediawiki.MediaWikiPageNode
@import com.bitplan.simplegraph.mediawiki.MediaWikiSystem
@import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource
@import org.apache.tinkerpop.gremlin.structure.Graph
@import org.apache.tinkerpop.gremlin.structure.Vertex
@args {
  Graph graph;
}
@// display a header with the given title
@def header(String title) {
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<title>@(title)</title>
</head>
<body>
}
@// display a footer with the given title
@def footer() {
</body>
</html>
}
@// extract Pictures
@def extractPictures(List<Vertex> nodes, int limit) {
@{
  MediaWikiSystem mws = new MediaWikiSystem();
}
  @for (Vertex vertex:nodes) {
    @{
      String url=vertex.property("url").value().toString();
      if (!url.startsWith("http")) 
      	break;
      String parts[]=url.split("/");
      if (parts.length<3)
        break;
      String pageName=parts[parts.length-1];
      String wikiUrl=parts[0]+"//"+parts[2];
      String scriptPath="/";
      if (wikiUrl.contains("wikipedia")) {
        scriptPath="/w";
      }
      MediaWikiPageNode pageNode = (MediaWikiPageNode) mws
        .connect(wikiUrl, scriptPath)
        .moveTo(pageName);
      SSLWiki wiki=mws.getWiki();      
      List<Ii> images=wiki.getImageInfosForPage(pageName,limit);
    }
    @displayImages(url,images)
  }    
}
@// display the images
@def displayImages(String title,List<Ii> images) {
@{
  int imageIndex=1;
}
<h1>@(title)</h1>
<table>
  <th>#</th><th>picture</th><th>thumbnail</th>
@for(Ii image:images) {
   <tr>
     <td>@(imageIndex++)</td>
     <td><a href='@(image.getUrl())'>@(image.getCanonicaltitle())</a></td>
     <td><img src='@(image.getUrl())' height='100px'></td>
   </tr>
}
</table>
}
@header("Picture extractor")
@extractPictures(graph.traversal().V().has("url").toList(),15)
@footer()