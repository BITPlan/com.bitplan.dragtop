@// Rythm template for dragtop http://www.bitplan.com/index.php/Dragtop
@// Java Analyzer example
@import org.apache.tinkerpop.gremlin.structure.Graph
@import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource
@import org.apache.tinkerpop.gremlin.structure.Vertex
@import com.bitplan.simplegraph.core.SimpleNode
@import com.bitplan.simplegraph.filesystem.FileSystem
@import com.bitplan.simplegraph.filesystem.FileNode
@import java.net.URI
@args {
  Graph graph;
}
@// display a header with the given title
@def header(String title) {
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<title>@(title)</title>
</head>
<body>
}
@// display a footer with the given title
@def footer() {
</body>
</html>
}
@// analyze the given file system structure
@def analyzeFile(File aroot) {
  @if (aroot.isDirectory()) {
    @{
      FileSystem fs=new FileSystem();
      FileNode start = (FileNode) fs.connect("").moveTo(aroot.getPath());
      start.recursiveOut("files",Integer.MAX_VALUE);
      List<Vertex> javaFileNodes=start.g().V().has("ext", "java").toList();
    }
    <ol>
    @for (Vertex fileNode:javaFileNodes) {
      <li> @(fileNode.property("name").value().toString())
    }
    </ol>
  }
}
@// analyze the urls/files supplied from the Dragtop via the Vertices
@// labeled "dragtop.Item"
@def analyzeFiles(Graph graph) {
@{
  GraphTraversalSource g=graph.traversal();
  List<Vertex> dragtopItemNodes=g.V().hasLabel("dragtop.Item").toList()
}
  @for (Vertex dragtopItem:dragtopItemNodes) {
     @{
        String url=dragtopItem.property("url").value().toString();
        File aroot=null;
        if (!url.endsWith("rythm")) {
           aroot=new File(new URI(url));
        }
     }
     @if (aroot) {
       <h3>@(aroot.getName())</h3>
       @analyzeFile(aroot)
    }
  }
}
@header("Java Analyzer")
@analyzeFiles(graph)
@footer()
